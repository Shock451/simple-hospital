[{"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\serviceWorker.js":"3","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ScheduleAppointment.js":"4","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\Context.js":"5","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Home.js":"6","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Profile.js":"7","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientList.js":"8","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\DoctorMessage.js":"9","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Register.js":"10","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Login.js":"11","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\DoctorMessageList.js":"12","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Readings.js":"13","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ForgotPassword.js":"14","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ScanReports.js":"15","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientMessageList.js":"16","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\RadiologyForm.js":"17","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientMessage.js":"18","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ReadingsEdit.js":"19","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ReadingsAdd.js":"20","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientDetails.js":"21","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Appointments.js":"22","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\PrivateRoute.js":"23","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\Loader.js":"24","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\admin\\CreateStaff.js":"25","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\admin\\StaffList.js":"26","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\helpers\\api.js":"27","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\Header.js":"28","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\Sidebar.js":"29","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\helpers\\functions.js":"30","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\helpers\\constants.js":"31","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\AdminHeader.js":"32"},{"size":520,"mtime":1618080635618,"results":"33","hashOfConfig":"34"},{"size":4710,"mtime":1618080855325,"results":"35","hashOfConfig":"34"},{"size":5227,"mtime":1618080635665,"results":"36","hashOfConfig":"34"},{"size":7194,"mtime":1618080855474,"results":"37","hashOfConfig":"34"},{"size":172,"mtime":1618080635604,"results":"38","hashOfConfig":"34"},{"size":3455,"mtime":1618080855334,"results":"39","hashOfConfig":"34"},{"size":15938,"mtime":1618080855465,"results":"40","hashOfConfig":"34"},{"size":4985,"mtime":1618080635631,"results":"41","hashOfConfig":"34"},{"size":10885,"mtime":1618080635621,"results":"42","hashOfConfig":"34"},{"size":7619,"mtime":1618080855472,"results":"43","hashOfConfig":"34"},{"size":7306,"mtime":1618080635629,"results":"44","hashOfConfig":"34"},{"size":2806,"mtime":1618080635622,"results":"45","hashOfConfig":"34"},{"size":7564,"mtime":1618080855468,"results":"46","hashOfConfig":"34"},{"size":5498,"mtime":1618080635623,"results":"47","hashOfConfig":"34"},{"size":6606,"mtime":1618080855473,"results":"48","hashOfConfig":"34"},{"size":2809,"mtime":1618080635643,"results":"49","hashOfConfig":"34"},{"size":7174,"mtime":1618080855467,"results":"50","hashOfConfig":"34"},{"size":9653,"mtime":1618080635632,"results":"51","hashOfConfig":"34"},{"size":11970,"mtime":1618080855471,"results":"52","hashOfConfig":"34"},{"size":11107,"mtime":1618080855469,"results":"53","hashOfConfig":"34"},{"size":18303,"mtime":1618080855340,"results":"54","hashOfConfig":"34"},{"size":12734,"mtime":1618080855334,"results":"55","hashOfConfig":"34"},{"size":839,"mtime":1618080855330,"results":"56","hashOfConfig":"34"},{"size":344,"mtime":1618080855329,"results":"57","hashOfConfig":"34"},{"size":5925,"mtime":1618080855476,"results":"58","hashOfConfig":"34"},{"size":4216,"mtime":1618080855477,"results":"59","hashOfConfig":"34"},{"size":10754,"mtime":1618080855332,"results":"60","hashOfConfig":"34"},{"size":2651,"mtime":1618080635607,"results":"61","hashOfConfig":"34"},{"size":4897,"mtime":1618080855331,"results":"62","hashOfConfig":"34"},{"size":3141,"mtime":1618080855333,"results":"63","hashOfConfig":"34"},{"size":162,"mtime":1618080635614,"results":"64","hashOfConfig":"34"},{"size":1864,"mtime":1618080855328,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1lwludd",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\index.js",[],["138","139"],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\serviceWorker.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ScheduleAppointment.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\Context.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Home.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Profile.js",["140","141"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BASE_URL } from '../helpers/constants';\r\nimport { fetchUserDetails } from '../helpers/api';\r\nimport Header from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { useAppContext } from \"../Context\";\r\nimport { formatDate, formatDateTime, convertDate } from \"../helpers/functions\";\r\n\r\nfunction Profile(props) {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isData, setData] = useState([]);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const [successMsg, setSuccessMsg] = useState(\"\");\r\n\r\n    const { appState } = useAppContext();\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        async function fetchData() {\r\n            const response = await fetchUserDetails();\r\n            setData(response);\r\n            setIsLoading(false);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    async function updateProfile(changes) {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('token');\r\n        const res = await fetch(BASE_URL + '/users/me', {\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': \"application/json\",\r\n                'Accept': 'application/json',\r\n            },\r\n            body: JSON.stringify(changes)\r\n        }).catch(e => {\r\n            setIsLoading(false);\r\n            setIsError(true);\r\n            setErrorMsg(\"Unable to update. Try again after some time.\");\r\n            console.log(e);\r\n        });\r\n\r\n        if (res && res.status) {\r\n            const data = await res.json();\r\n            if (res.status === 200) {\r\n                setIsSuccess(true);\r\n                setIsLoading(false);\r\n                setIsError(false);\r\n                setErrorMsg('');\r\n                setSuccessMsg(data.msg);\r\n            } else {\r\n                setIsLoading(false);\r\n                setIsError(true);\r\n                setErrorMsg(data.err);\r\n                setSuccessMsg('');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            {\r\n                isLoading\r\n                    ?\r\n                    <Loader />\r\n                    :\r\n                    null\r\n            }\r\n            <Header data={props} />\r\n            <Sidebar data={props} />\r\n\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"content container-fluid\">\r\n                    <div className=\"page-header\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h3 className=\"page-title\">Profile</h3>\r\n                                <ul className=\"breadcrumb\">\r\n                                    <li className=\"breadcrumb-item active\">Profile</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"card-title mb-0\">User Info</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {\r\n                                        isError\r\n                                            ?\r\n                                            <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                                </button>\r\n                                                {errorMsg}\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                    {\r\n                                        isSuccess\r\n                                            ?\r\n                                            <div className=\"alert alert-success alert-dismissible\" role=\"alert\">\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                                </button>\r\n                                                {successMsg}\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                    <form onSubmit={handleSubmit(updateProfile)}>\r\n                                        <div className=\"panel panel-default\">\r\n                                            <div className=\"panel-body\">\r\n                                                <div className=\"form-group row\">\r\n                                                    <div className=\"col-sm-4\">\r\n                                                        <label>Name <em>*</em></label>\r\n                                                        <input ref={register({ required: \"This field is required\" })} className=\"form-control\" name=\"name\" defaultValue={!isLoading ? isData.data.name : ''} />\r\n                                                        {errors.name && <label className=\"error\">{errors.name.message}</label>}\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-4\">\r\n                                                        <label>Mobile <em>*</em></label>\r\n                                                        <input ref={register({\r\n                                                            required: \"This field is required\",\r\n                                                            pattern: {\r\n                                                                value: /^[0-9]*$/i,\r\n                                                                message: \"Please enter valid mobile number\"\r\n                                                            },\r\n                                                        })} className=\"form-control\" name=\"mobile\" defaultValue={!isLoading ? isData.data.mobile : ''} />\r\n                                                        {errors.mobile && <label className=\"error\">{errors.mobile.message}</label>}\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-4\">\r\n                                                        <label>Email <em>*</em></label>\r\n                                                        <input ref={register({\r\n                                                            required: \"This field is required\",\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                                                message: \"Please enter valid email address\"\r\n                                                            }\r\n                                                        })} className=\"form-control\" name=\"email\" type=\"email\" placeholder=\"Email Address\" defaultValue={!isLoading ? isData.data.email : ''} />\r\n                                                        {errors.email && <label className=\"error\">{errors.email.message}</label>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <label>Gender</label>\r\n                                                        <select ref={register} className=\"form-control\" name=\"gender\" defaultValue={!isLoading ? isData.data.gender : ''}>\r\n                                                            {/* <option value=\"\">Doctor</option> */}\r\n                                                            <option value=\"male\">Male</option>\r\n                                                            <option value=\"female\">Female</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <label>Address</label>\r\n                                                        <textarea ref={register} className=\"form-control\" name=\"address\" defaultValue={!isLoading ? isData.data.address : ''}></textarea>\r\n                                                    </div>\r\n                                                    {appState.user?.role === \"patient\" &&\r\n                                                        <div className=\"col-sm-6\">\r\n                                                            <label>Allergies</label>\r\n                                                            <textarea ref={register} className=\"form-control\" name=\"allergies\" defaultValue={!isLoading ? isData.data.allergies : ''}></textarea>\r\n                                                        </div>\r\n                                                    }\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <label>Description</label>\r\n                                                        <textarea ref={register} className=\"form-control\" name=\"description\" defaultValue={!isLoading ? isData.data.description : ''}></textarea>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row\">\r\n                                                    {appState.user?.role === \"doctor\" ?\r\n                                                        <div className=\"col-sm-4\">\r\n                                                            <label>License</label>\r\n                                                            <input ref={register} className=\"form-control\" name=\"license_num\" defaultValue={!isLoading ? isData.data.license_num : ''} />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div className=\"col-sm-4\">\r\n                                                            <label>Date of Birth</label>\r\n                                                            <input ref={register({\r\n                                                                required: \"This field is required\",\r\n                                                            })} className=\"form-control\" name=\"dob\" type=\"date\" defaultValue={!isLoading ? convertDate(isData.data.dob) : ''} min=\"\" max=\"\" />\r\n                                                        </div>\r\n                                                    }\r\n                                                    <div className=\"col-sm-4\">\r\n                                                        <label>City</label>\r\n                                                        <input ref={register} className=\"form-control\" name=\"city\" defaultValue={!isLoading ? isData.data.city : ''} />\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-4\">\r\n                                                        <label>State</label>\r\n                                                        <input ref={register} className=\"form-control\" name=\"state\" defaultValue={!isLoading ? isData.data.state : ''} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"panel panel-default\">\r\n                                                <div className=\"panel-heading\">\r\n                                                    <h6 className=\"panel-title\"><i className=\"icon-office\"></i>Change Password</h6>\r\n                                                </div>\r\n                                                <div className=\"panel-body\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <label>Old Password </label>\r\n                                                                <input ref={register} type=\"password\" className=\"form-control\" name=\"old_password\" id=\"old-password\" />\r\n                                                                <span className=\"help-block\">Leave blank if you don't want to change password</span>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <label>New Password </label>\r\n                                                                <input ref={register} type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" />\r\n\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <label>Retype New Password </label>\r\n                                                                <input ref={register({\r\n                                                                    validate: (value) => {\r\n                                                                        return value === watch('password') || \"Passwords don't match.\"\r\n                                                                    }\r\n                                                                })} type=\"password\" className=\"form-control\" name=\"password2\" id=\"password2\" />\r\n                                                                {errors.password2 && <label className=\"error\">{errors.password2.message}</label>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-actions text-right\">\r\n                                                <button type=\"submit\" name=\"update\" id=\"update\" className=\"btn btn-danger\"><i className=\"icon-signup\"></i>Update Profile</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientList.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\DoctorMessage.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Register.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Login.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\DoctorMessageList.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Readings.js",["142","143"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchPatientReadings } from '../helpers/api';\r\nimport Header from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport Sidebar from '../components/Sidebar';\r\nimport {BASE_URL} from '../helpers/constants';\r\nimport { convertDate, calculateBMI } from '../helpers/functions';\r\n\r\nfunction getClassName(val, max, min){\r\n    return val < min? \"low\" : val > max ? \"high\" : \"normal\";\r\n    // if (val < min){\r\n    //     return \"yellow\";\r\n    // } else if (val )\r\n}\r\n\r\nfunction Readings(props) {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [readings, setReadings] = useState([]);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n    async function fetchData() {\r\n        setIsLoading(true);\r\n        const { data } = await fetchPatientReadings();\r\n        setReadings(data);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    function deletePatient(id) {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('token');\r\n        let status;\r\n        fetch(BASE_URL + '/patients/readings/' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }).then((response) => {\r\n            status = response.status;\r\n            return response.json();\r\n        })\r\n            .then((result) => {\r\n                if (status) {\r\n                    setIsLoading(false);\r\n                    props.history.push({\r\n                        pathname: \"/readings\",\r\n                        state: {\r\n                            success: \"Reading deleted successfully\"\r\n                        }\r\n                    });\r\n                    fetchData();\r\n                } else {\r\n                    setIsLoading(false);\r\n                    setIsError(true);\r\n                    setErrorMsg(result.message);\r\n                }\r\n            }).catch(e => {\r\n                setIsLoading(false);\r\n                setIsError(true);\r\n                setErrorMsg(\"Not able to connect with API try again after sometime.\");\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            {\r\n                isLoading\r\n                    ?\r\n                    <Loader />\r\n                    :\r\n                    null\r\n            }\r\n            <Header data={props} />\r\n            <Sidebar data={props} />\r\n\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"content container-fluid\">\r\n                    <div className=\"page-header\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h3 className=\"page-title\">Readings</h3>\r\n                                <ul className=\"breadcrumb\">\r\n                                    <li className=\"breadcrumb-item active\">Readings</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        props.location.state\r\n                            ?\r\n                            props.location.state.success\r\n                                ?\r\n                                <div className=\"alert alert-success alert-dismissible\" role=\"alert\">\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                    </button> {props.location.state.success}\r\n                                </div>\r\n                                :\r\n                                null\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        isError\r\n                            ?\r\n                            <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                </button>\r\n                                {errorMsg}\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-striped custom-table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Date</th>\r\n                                        <th>Blood Sugar(mg/dL)</th>\r\n                                        <th>Blood Pressure(mmHg)</th>\r\n                                        <th>Heart Rate(BPM)</th>\r\n                                        <th>Temperature(C)</th>\r\n                                        <th>BMI(kg/m2)</th>\r\n                                        <th>No. Drugs</th>\r\n                                        <th>Prescription</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n\r\n                                    !isLoading\r\n                                        ?\r\n                                        <tbody>\r\n                                            {\r\n                                                readings.map(function (data, index) {\r\n                                                    return (\r\n                                                        <tr key={data.id}>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{convertDate(data.updated)}</td>\r\n                                                            <td className={getClassName(data.blood_sugar, 140, 130)}>{data.blood_sugar}</td>\r\n                                                            <td className={getClassName(data.blood_pressure, 120, 110)}>{data.blood_pressure}</td>\r\n                                                            <td className={getClassName(data.heart_rate, 100, 60)}>{data.heart_rate}</td>\r\n                                                            <td className={getClassName(data.temperature, 38, 36)}>{data.temperature}</td>\r\n                                                            <td className={getClassName(calculateBMI(data.height, data.weight), 25, 18)}>{calculateBMI(data.height, data.weight)}</td>\r\n                                                            <td>{data.prescribed}</td>\r\n                                                            <td>{data.prescription}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Readings;","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ForgotPassword.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ScanReports.js",["144","145","146"],"import React, { useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { fetchMyScanReports } from '../helpers/api';\r\nimport Header from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport Sidebar from '../components/Sidebar';\r\n// import { BASE_URL } from '../helpers/constants';\r\n// import { convertDate, calculateBMI } from '../helpers/functions';\r\n\r\nfunction ScanReports(props) {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [reports, setReports] = useState([]);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n    async function fetchData() {\r\n        setIsLoading(true);\r\n        const { data } = await fetchMyScanReports();\r\n        setReports(data);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // function deletePatient(id) {\r\n    //     setIsLoading(true);\r\n    //     const token = localStorage.getItem('token');\r\n    //     let status;\r\n    //     fetch(BASE_URL + '/patients/readings/' + id, {\r\n    //         method: 'DELETE',\r\n    //         headers: {\r\n    //             'Authorization': `Bearer ${token}`,\r\n    //             'Content-Type': \"application/json\",\r\n    //             'Accept': 'application/json',\r\n    //         }\r\n    //     }).then((response) => {\r\n    //         status = response.status;\r\n    //         return response.json();\r\n    //     })\r\n    //         .then((result) => {\r\n    //             if (status) {\r\n    //                 setIsLoading(false);\r\n    //                 props.history.push({\r\n    //                     pathname: \"/readings\",\r\n    //                     state: {\r\n    //                         success: \"Reading deleted successfully\"\r\n    //                     }\r\n    //                 });\r\n    //                 fetchData();\r\n    //             } else {\r\n    //                 setIsLoading(false);\r\n    //                 setIsError(true);\r\n    //                 setErrorMsg(result.message);\r\n    //             }\r\n    //         }).catch(e => {\r\n    //             setIsLoading(false);\r\n    //             setIsError(true);\r\n    //             setErrorMsg(\"Not able to connect with API try again after sometime.\");\r\n    //             console.log(e);\r\n    //         });\r\n    // }\r\n\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            {\r\n                isLoading\r\n                    ?\r\n                    <Loader />\r\n                    :\r\n                    null\r\n            }\r\n            <Header data={props} />\r\n            <Sidebar data={props} />\r\n\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"content container-fluid\">\r\n                    <div className=\"page-header\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h3 className=\"page-title\">Reports</h3>\r\n                                <ul className=\"breadcrumb\">\r\n                                    <li className=\"breadcrumb-item active\">Reports</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        props.location.state\r\n                            ?\r\n                            props.location.state.success\r\n                                ?\r\n                                <div className=\"alert alert-success alert-dismissible\" role=\"alert\">\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                    </button> {props.location.state.success}\r\n                                </div>\r\n                                :\r\n                                null\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        isError\r\n                            ?\r\n                            <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                </button>\r\n                                {errorMsg}\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-striped custom-table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        {/* {} */}\r\n                                        <th>Description</th>\r\n                                        <th>Image</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n                                    !isLoading\r\n                                        ?\r\n                                        <tbody>\r\n                                            {\r\n                                                reports.map(function (data, index) {\r\n                                                    return (\r\n                                                        <tr key={data.id}>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{data.report}</td>\r\n                                                            <td>\r\n                                                                <a target=\"_blank\" href={`${data.image_uri}`}>\r\n                                                                    View Image\r\n                                                                </a>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ScanReports;","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientMessageList.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\RadiologyForm.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientMessage.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ReadingsEdit.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\ReadingsAdd.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\PatientDetails.js",["147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport { fetchUniquePatient, fetchPatientReadings, fetchPatientScanReports } from '../helpers/api';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { createChartData, convertDate, calculateBMI } from '../helpers/functions';\r\nimport { BASE_URL } from '../helpers/constants';\r\n\r\nfunction PatientDetails(props) {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isData, setData] = useState([]);\r\n    const [isChartData, setChartData] = useState();\r\n    const [reports, setReports] = useState([]);\r\n\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n    const id = props.match.params.id;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setIsLoading(true);\r\n            const { data } = await fetchUniquePatient(id);\r\n            const { data: reportData } = await fetchPatientScanReports(id);\r\n            setData(data);\r\n            setReports(reportData);\r\n            setChartData(createChartData(data.readings))\r\n            setIsLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    function deletePatient(reading_id) {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('token');\r\n        let status;\r\n        fetch(BASE_URL + '/patients/readings/' + reading_id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }).then((response) => {\r\n            status = response.status;\r\n            return response.json();\r\n        })\r\n            .then((result) => {\r\n                if (status) {\r\n                    setIsLoading(false);\r\n                    props.history.push({\r\n                        pathname: \"/patient_details\" + id,\r\n                        state: {\r\n                            success: \"Reading deleted successfully\"\r\n                        }\r\n                    });\r\n                } else {\r\n                    setIsLoading(false);\r\n                    setIsError(true);\r\n                    setErrorMsg(result.message);\r\n                }\r\n            }).catch(e => {\r\n                setIsLoading(false);\r\n                setIsError(true);\r\n                setErrorMsg(\"Not able to connect with API try again after sometime.\");\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            {\r\n                isLoading\r\n                    ?\r\n                    <Loader />\r\n                    :\r\n                    null\r\n            }\r\n            <Header data={props} />\r\n            <Sidebar data={props} />\r\n\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"content container-fluid\">\r\n                    <div className=\"page-header\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h3 className=\"page-title\">Patient</h3>\r\n                                <ul className=\"breadcrumb\">\r\n                                    <li className=\"breadcrumb-item\"><Link to={'/patient_list'}>Patient List</Link></li>\r\n                                    <li className=\"breadcrumb-item active\">Patient Details</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    {!isLoading ?\r\n                                        <div className=\"profile-view\">\r\n                                            <div className=\"profile-basic\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"profile-info-left\">\r\n                                                            <h3 className=\"user-name m-t-0\">{isData.user.name}</h3>\r\n                                                            <h5 className=\"company-role m-t-0 mb-0\">{isData.user.type}</h5>\r\n                                                            <div className=\"staff-id\">{isData.patient !== null ? isData.patient.description : ''}</div>\r\n                                                            <div className=\"staff-msg\"><Link to={'/doctor_message/' + isData.user.id} className=\"btn btn-custom\">Send Message</Link></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-7\">\r\n                                                        <ul className=\"personal-info\">\r\n                                                            <li>\r\n                                                                <span className=\"title\">Phone:</span>\r\n                                                                <span className=\"text\"><a href={'tel:' + isData.user.mobile}>{isData.user.mobile}</a></span>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <span className=\"title\">Email:</span>\r\n                                                                <span className=\"text\"><a href={'mailto:' + isData.user.email}>{isData.user.email}</a></span>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <span className=\"title\">Address:</span>\r\n                                                                <span className=\"text-dark\">{isData.patient.address ?? 'Nil'}</span>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <span className=\"title\">City:</span>\r\n                                                                <span className=\"text-dark\">{isData.patient.city ?? 'Nil'}</span>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <span className=\"title\">State:</span>\r\n                                                                <span className=\"text-dark\">{isData.patient.state ?? 'Nil'}</span>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"col-md-12\">\r\n                                            <h4>Loading...</h4>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"page-header\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h3 className=\"page-title\">Readings</h3>\r\n                                <ul className=\"breadcrumb\">\r\n                                    <li className=\"breadcrumb-item active\">Readings</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-auto float-right ml-auto\">\r\n                                <Link to={'/readings_add/' + id} className=\"btn add-btn\"><i className=\"fa fa-plus\"></i> Add New Readings</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        props.location.state\r\n                            ?\r\n                            props.location.state.success\r\n                                ?\r\n                                <div className=\"alert alert-success alert-dismissible\" role=\"alert\">\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                    </button> {props.location.state.success}\r\n                                </div>\r\n                                :\r\n                                null\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        isError\r\n                            ?\r\n                            <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                                </button>\r\n                                {errorMsg}\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    <div className=\"row mb-5\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-striped custom-table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Date</th>\r\n                                        <th>Blood Sugar(mg/dL)</th>\r\n                                        <th>Blood Pressure(mmHg)</th>\r\n                                        <th>Heart Rate(BPM)</th>\r\n                                        <th>Temperature(C)</th>\r\n                                        <th>BMI(kg/m2)</th>\r\n                                        <th>No. Drugs</th>\r\n                                        <th>Prescription</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n\r\n                                    !isLoading\r\n                                        ?\r\n                                        <tbody>\r\n                                            {\r\n                                                isData.readings.map(function (data, index) {\r\n                                                    return (\r\n                                                        <tr key={data.id}>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{convertDate(data.updated)}</td>\r\n                                                            <td>{data.blood_sugar}</td>\r\n                                                            <td>{data.blood_pressure}</td>\r\n                                                            <td>{data.heart_rate}</td>\r\n                                                            <td>{data.temperature}</td>\r\n                                                            <td>{calculateBMI(data.height, data.weight)}</td>\r\n                                                            <td>{data.prescribed}</td>\r\n                                                            <td>{data.prescription}</td>\r\n                                                            <td className=\"text-right\">\r\n                                                                <div className=\"dropdown dropdown-action\">\r\n                                                                    <button\r\n                                                                        className=\"action-icon dropdown-toggle\"\r\n                                                                        data-toggle=\"dropdown\"\r\n                                                                        aria-expanded=\"false\">\r\n                                                                        <i className=\"material-icons\">more_vert</i>\r\n                                                                    </button>\r\n                                                                    <div className=\"btn dropdown-menu dropdown-menu-right\" x-placement=\"bottom-end\">\r\n                                                                        <Link\r\n                                                                            className=\"dropdown-item border-0 btn-transition btn passData\"\r\n                                                                            to={`/readings_edit/${id}/${data.id}`}\r\n                                                                            title=\"Edit\">\r\n                                                                            <i className=\"fa fa-pencil\"></i> Edit\r\n                                                                        </Link>\r\n                                                                        <button\r\n                                                                            className=\"btn dropdown-item border-0 btn-transition btn passData\"\r\n                                                                            title=\"Delete\"\r\n                                                                            onClick={() => {\r\n                                                                                if (window.confirm('Are you sure you want to delete this?')) {\r\n                                                                                    deletePatient(data.id)\r\n                                                                                };\r\n                                                                            }}>\r\n                                                                            <i className=\"fa fa-trash\"></i> Delete\r\n                                                                        </button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"card-title\">Patients Readings</h3>\r\n                                    {!isLoading ?\r\n                                        isChartData.length !== 0 ?\r\n                                            <Bar data={isChartData} />\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row mb-5\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-striped custom-table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Description</th>\r\n                                        <th>Image</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n\r\n                                    !isLoading\r\n                                        ?\r\n                                        <tbody>\r\n                                            {\r\n                                                reports.map(function (data, index) {\r\n                                                    return (\r\n                                                        <tr key={data.id}>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{data.report}</td>\r\n                                                            <td>\r\n                                                                <a target=\"_blank\" href={`${data.image_uri}`}>\r\n                                                                    View Image\r\n                                                                </a>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientDetails;","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\Appointments.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\PrivateRoute.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\Loader.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\admin\\CreateStaff.js",["150","151","152","153","154","155","156"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useAppContext } from \"../../Context\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as myConstClass from '../../helpers/constants';\r\n\r\nimport Header from '../../components/AdminHeader';\r\n\r\nfunction CreateStaff(props) {\r\n\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const { setAuthToken } = useAppContext();\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    function postRegister(data) {\r\n        setIsLoading(true);\r\n        let status;\r\n        fetch(myConstClass.BASE_URL + '/users/register', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                mobile: data.mobile,\r\n                email: data.username,\r\n                password: data.password,\r\n                role: data.role,\r\n            })\r\n        }).then((res) => {\r\n            status = res.status;\r\n            console.log(status);\r\n            return res.json()\r\n        })\r\n            .then((data) => {\r\n                if (status === 200) {\r\n                    window.location.href = \"/\";\r\n                } else {\r\n                    setIsLoading(false);\r\n                    setIsError(true);\r\n                    setErrorMsg(data.err);\r\n                }\r\n            }).catch(e => {\r\n                setIsLoading(false);\r\n                setIsError(true);\r\n                setErrorMsg(\"Unable to register. Try again after some time.\");\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header data={props} />\r\n            <div className=\"mt-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 mx-auto\">\r\n                            <p className=\"lead\">Create a new staff account</p>\r\n                            <form className=\"auth-form mt-4\" onSubmit={handleSubmit(postRegister)}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Full Name <em>*</em></label>\r\n                                    <input ref={register({ required: \"This field is required\" })} className=\"form-control\" name=\"name\" />\r\n                                    {errors.name && <label className=\"error\">{errors.name.message}</label>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Mobile <em>*</em></label>\r\n                                    <input ref={register({\r\n                                        required: \"This field is required\",\r\n                                        pattern: {\r\n                                            value: /^[0-9]*$/i,\r\n                                            message: \"Please enter valid mobile number\"\r\n                                        }\r\n                                    })} className=\"form-control\" name=\"mobile\" />\r\n                                    {errors.mobile && <label className=\"error\">{errors.mobile.message}</label>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Email <em>*</em></label>\r\n                                    <input ref={register({\r\n                                        required: \"This field is required\",\r\n                                        pattern: {\r\n                                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                            message: \"Please enter valid email address\"\r\n                                        }\r\n                                    })} className=\"form-control\" name=\"username\" type=\"username\" placeholder=\"Email Address\" />\r\n                                    {errors.username && <label className=\"error\">{errors.username.message}</label>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Password <em>*</em></label>\r\n                                    <input ref={register({ required: \"This field is required\" })} className=\"form-control\" name=\"password\" type=\"password\" placeholder=\"password\" />\r\n                                    {errors.password && <label className=\"error\">{errors.password.message}</label>}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Staff Role</label>\r\n                                    <select ref={register} className=\"form-control\" name=\"role\">\r\n                                        <option value=\"doctor\">Doctor</option>\r\n                                        <option value=\"radiologist\">Radiologist</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group text-center mt-5\">\r\n                                    <button className=\"btn btn-primary account-btn\" type=\"submit\" >Register</button>\r\n                                </div>\r\n                                <div className=\"account-footer mb-3\">\r\n                                    <p>Already have an account? <Link to={'/login'}>Login</Link></p>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateStaff;","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\pages\\admin\\StaffList.js",["157"],"import React from \"react\";\r\nimport Header from '../../components/AdminHeader';\r\nimport { useAppContext } from '../../Context';\r\nimport Skeleton from 'react-loading-skeleton';\r\n// import { Link } from 'react-router-dom';\r\n// import Loader from '../components/Loader';\r\n// import Sidebar from '../components/Sidebar';\r\nimport { fetchAllStaff, deleteStaff } from \"../../helpers/api\";\r\n\r\nfunction StaffList(props) {\r\n\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [data, setData] = React.useState([]);\r\n\r\n    const handleDelete = async (id, role) => {\r\n        const { status } = await deleteStaff(id, role);\r\n        if (status === 200) {\r\n            // update staff\r\n            let _data = data.filter(staff => staff.id !== id);\r\n            setData(_data);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            setIsLoading(true);\r\n            const { status, data } = await fetchAllStaff();\r\n            if (status === 200) {\r\n                setData(data.staffList);\r\n                console.log(data.staffList);\r\n            }\r\n            setIsLoading(false);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Header data={props} />\r\n            <div className=\"mt-5\">\r\n                <div className=\"container\">\r\n                    <p className=\"lead text-center\">Members of staff</p>\r\n                    <table id=\"staff-list\" className=\"table table-bordered mt-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                {/* <th scope=\"col\">ID</th> */}\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Role</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {!isLoading ?\r\n                                (data && data.length > 0 &&\r\n                                    data.map((staff, index) => (\r\n                                        <tr key={`staff-${staff.id}`}>\r\n                                            <th scope=\"row\">{index}</th>\r\n                                            {/* <th>{staff.id}</th> */}\r\n                                            <td>{staff.name}</td>\r\n                                            <td>{staff.role}</td>\r\n                                            <td>{staff.email}</td>\r\n                                            <td>{staff.mobile}</td>\r\n                                            <td>\r\n                                                <button type=\"button\" onClick={() => handleDelete(staff.id, staff.role)} className=\"btn btn-danger\">Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    // <td>\r\n                                    //     <p className=\"text-center my-4\">No member of staff is registered on this platform.</p>\r\n                                    // </td>\r\n                                )\r\n                                :\r\n                                <tr>\r\n                                    <th scope=\"row\"><Skeleton /></th>\r\n                                    <td><Skeleton /></td>\r\n                                    <td><Skeleton /></td>\r\n                                    <td><Skeleton /></td>\r\n                                    <td><Skeleton /></td>\r\n                                    <td>\r\n                                        {/* <button type=\"button\" className=\"btn btn-danger\">Delete</button> */}\r\n                                        <Skeleton />\r\n                                    </td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffList;","C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\helpers\\api.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\Header.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\Sidebar.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\helpers\\functions.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\helpers\\constants.js",[],"C:\\Users\\HP\\Desktop\\doctor-patient-portal\\src\\components\\AdminHeader.js",["158","159","160"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useAppContext } from '../Context';\r\nimport logo from '../logo.svg';\r\n\r\nexport default function AdminHeader(props) {\r\n\r\n    // const { appState } = useAppContext();\r\n\r\n    function signOut(e) {\r\n        e.preventDefault();        \r\n        localStorage.clear();\r\n        return (\r\n            <Redirect to={'/login'} />\r\n        )\r\n    }\r\n\r\n    function getClassName(path){\r\n        let current = props.data.location.pathname;\r\n        if (current === path || current === path + \"/\"){\r\n            return \"nav-item active\";\r\n        } else {\r\n            return \"nav-item\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark header-admin\">\r\n            <a className=\"navbar-brand\" href=\"/admin\">Doctor-Patient Portal</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className={getClassName(\"/admin\")}>\r\n                        <a className=\"nav-link\" href=\"/admin\">Staff List <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className={getClassName(\"/admin/create\")}>\r\n                        <a className=\"nav-link\" href=\"/admin/create\">Add Staff</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#/\" onClick={signOut}>Logout</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":9,"column":10,"nodeType":"167","messageId":"168","endLine":9,"endColumn":20},{"ruleId":"165","severity":1,"message":"169","line":9,"column":22,"nodeType":"167","messageId":"168","endLine":9,"endColumn":36},{"ruleId":"165","severity":1,"message":"170","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"171","line":34,"column":14,"nodeType":"167","messageId":"168","endLine":34,"endColumn":27},{"ruleId":"165","severity":1,"message":"172","line":13,"column":21,"nodeType":"167","messageId":"168","endLine":13,"endColumn":31},{"ruleId":"165","severity":1,"message":"173","line":14,"column":22,"nodeType":"167","messageId":"168","endLine":14,"endColumn":33},{"ruleId":"174","severity":1,"message":"175","line":136,"column":65,"nodeType":"176","endLine":136,"endColumn":111},{"ruleId":"165","severity":1,"message":"177","line":2,"column":30,"nodeType":"167","messageId":"168","endLine":2,"endColumn":50},{"ruleId":"178","severity":1,"message":"179","line":35,"column":8,"nodeType":"180","endLine":35,"endColumn":10,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"175","line":306,"column":65,"nodeType":"176","endLine":306,"endColumn":111},{"ruleId":"165","severity":1,"message":"182","line":2,"column":16,"nodeType":"167","messageId":"168","endLine":2,"endColumn":24},{"ruleId":"165","severity":1,"message":"183","line":12,"column":12,"nodeType":"167","messageId":"168","endLine":12,"endColumn":22},{"ruleId":"165","severity":1,"message":"184","line":12,"column":24,"nodeType":"167","messageId":"168","endLine":12,"endColumn":35},{"ruleId":"165","severity":1,"message":"185","line":13,"column":12,"nodeType":"167","messageId":"168","endLine":13,"endColumn":19},{"ruleId":"165","severity":1,"message":"186","line":14,"column":12,"nodeType":"167","messageId":"168","endLine":14,"endColumn":21},{"ruleId":"165","severity":1,"message":"187","line":15,"column":12,"nodeType":"167","messageId":"168","endLine":15,"endColumn":20},{"ruleId":"165","severity":1,"message":"188","line":16,"column":13,"nodeType":"167","messageId":"168","endLine":16,"endColumn":25},{"ruleId":"165","severity":1,"message":"189","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":23},{"ruleId":"165","severity":1,"message":"170","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"189","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":23},{"ruleId":"165","severity":1,"message":"190","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'formatDate' is defined but never used.","Identifier","unusedVar","'formatDateTime' is defined but never used.","'Link' is defined but never used.","'deletePatient' is defined but never used.","'setIsError' is assigned a value but never used.","'setErrorMsg' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'fetchPatientReadings' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'Redirect' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'isError' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","'setAuthToken' is assigned a value but never used.","'useAppContext' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},"Update the dependencies array to be: [id]",{"range":"196","text":"197"},[1322,1324],"[id]"]